% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multilag.cpts.merge.R
\name{multilag.cpts.merge}
\alias{multilag.cpts.merge}
\title{Merging Change Point Estimators from Multiple Lags Into Final Set of Change Point Estimators}
\usage{
multilag.cpts.merge(
  x.c,
  eta.merge = 1,
  merge.type = c("sequential", "bottom-up")[1]
)
}
\arguments{
\item{x.c}{A \code{list} object, where each element of the list is the output of the \link{np.mojo} function computed at a
different lag.}

\item{eta.merge}{A positive numeric value for the minimal mutual distance of
changes, relative to bandwidth, used to merge change point estimators across different lags.}

\item{merge.type}{String indicating the method used to merge change point estimators from different lags. Possible choices are
 \itemize{
   \item{\code{"sequential"}}{:  Starting from the left-most change point estimator and proceeding forward in time, estimators
   are grouped into clusters based on mutual distance. The estimator yielding the smallest corresponding p-value is
   chosen as the change point estimator for that cluster. See McGonigle and Cho (2023) for details.}
       \item{\code{"bottom-up"}}{: starting with the smallest p-value, the change points are merged using bottom-up merging (Messer
       et al. (2014)).}
}}
}
\value{
A \code{list} object which contains the following fields
\item{cpts}{A matrix with rows corresponding to final change point estimators, with associate lag and p-value given in columns}
   \item{cpt.clusters}{A \code{list} object of length given by the number of detected change points. Each field contains a matrix of all
   change point estimators that are declared to be associated to the corresponding change point in the \code{cpts} field.}
}
\description{
Merges change point estimators from different lagged values into a final set of overall change point estimators.
}
\details{
See McGonigle and Cho (2023) for further details.
}
\examples{
\donttest{
set.seed(123)
n <- 1000
noise <- c(rep(1,300),rep(0.4,700))*stats::arima.sim(model = list(ar =0.3), n = 1000)
signal <- c(rep(0,700),rep(0.5,300))
x <- signal + noise
x.c0 <- np.mojo(x, G = 166, lag = 0)
x.c1 <- np.mojo(x, G = 166, lag = 1)
x.c2 <- np.mojo(x, G = 166, lag = 2)
x.c <- multilag.cpts.merge(list(x.c0,x.c1,x.c2))
x.c
}
}
\seealso{
\link{np.mojo}, \link{np.mojo.multilag}
}
